// Generated by view binder compiler. Do not edit!
package ids.dika.recipes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import ids.dika.recipes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarMenuBinding implements ViewBinding {
  @NonNull
  private final AppBarLayout rootView;

  @NonNull
  public final ImageButton ibBack;

  @NonNull
  public final Toolbar toolbarDetail;

  @NonNull
  public final TextView tvTitle;

  private ToolbarMenuBinding(@NonNull AppBarLayout rootView, @NonNull ImageButton ibBack,
      @NonNull Toolbar toolbarDetail, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.ibBack = ibBack;
    this.toolbarDetail = toolbarDetail;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public AppBarLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarMenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarMenuBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar_menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarMenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ib_back;
      ImageButton ibBack = rootView.findViewById(id);
      if (ibBack == null) {
        break missingId;
      }

      id = R.id.toolbar_detail;
      Toolbar toolbarDetail = rootView.findViewById(id);
      if (toolbarDetail == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = rootView.findViewById(id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ToolbarMenuBinding((AppBarLayout) rootView, ibBack, toolbarDetail, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
