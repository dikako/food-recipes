// Generated by view binder compiler. Do not edit!
package ids.dika.recipes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import ids.dika.recipes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRowRecipesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cvRecipe;

  @NonNull
  public final ImageButton ibBookmark;

  @NonNull
  public final ImageView ivRecipe;

  @NonNull
  public final TextView tvRecipe;

  private ItemRowRecipesBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cvRecipe,
      @NonNull ImageButton ibBookmark, @NonNull ImageView ivRecipe, @NonNull TextView tvRecipe) {
    this.rootView = rootView;
    this.cvRecipe = cvRecipe;
    this.ibBookmark = ibBookmark;
    this.ivRecipe = ivRecipe;
    this.tvRecipe = tvRecipe;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRowRecipesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRowRecipesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_row_recipes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRowRecipesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_recipe;
      CardView cvRecipe = rootView.findViewById(id);
      if (cvRecipe == null) {
        break missingId;
      }

      id = R.id.ib_bookmark;
      ImageButton ibBookmark = rootView.findViewById(id);
      if (ibBookmark == null) {
        break missingId;
      }

      id = R.id.iv_recipe;
      ImageView ivRecipe = rootView.findViewById(id);
      if (ivRecipe == null) {
        break missingId;
      }

      id = R.id.tv_recipe;
      TextView tvRecipe = rootView.findViewById(id);
      if (tvRecipe == null) {
        break missingId;
      }

      return new ItemRowRecipesBinding((ConstraintLayout) rootView, cvRecipe, ibBookmark, ivRecipe,
          tvRecipe);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
