// Generated by view binder compiler. Do not edit!
package ids.dika.recipes.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import ids.dika.recipes.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ToolbarHomeBinding implements ViewBinding {
  @NonNull
  private final AppBarLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ConstraintLayout clSearch;

  @NonNull
  public final CollapsingToolbarLayout collapseToolbar;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final Toolbar toolbar;

  private ToolbarHomeBinding(@NonNull AppBarLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull ConstraintLayout clSearch, @NonNull CollapsingToolbarLayout collapseToolbar,
      @NonNull ImageView imageView, @NonNull TextView textView, @NonNull TextView textView2,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.clSearch = clSearch;
    this.collapseToolbar = collapseToolbar;
    this.imageView = imageView;
    this.textView = textView;
    this.textView2 = textView2;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public AppBarLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ToolbarHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.toolbar_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ToolbarHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      AppBarLayout appBarLayout = (AppBarLayout) rootView;

      id = R.id.cl_search;
      ConstraintLayout clSearch = rootView.findViewById(id);
      if (clSearch == null) {
        break missingId;
      }

      id = R.id.collapse_toolbar;
      CollapsingToolbarLayout collapseToolbar = rootView.findViewById(id);
      if (collapseToolbar == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = rootView.findViewById(id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new ToolbarHomeBinding((AppBarLayout) rootView, appBarLayout, clSearch,
          collapseToolbar, imageView, textView, textView2, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
